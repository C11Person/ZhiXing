<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zx.dao.CompanyTaskMapper">
  <resultMap id="BaseResultMap" type="cn.zx.pojo.CompanyTask">
    <id column="task_id" jdbcType="INTEGER" property="task_id" />
    <result column="company_id" jdbcType="INTEGER" property="company_id" />
    <result column="task_title" jdbcType="VARCHAR" property="task_title" />
    <result column="to_user" jdbcType="INTEGER" property="to_user" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="task_obj" jdbcType="INTEGER" property="task_obj" />
    <result column="task_start_time" jdbcType="TIMESTAMP" property="task_start_time" />
    <result column="task_end_time" jdbcType="TIMESTAMP" property="task_end_time" />
    <result column="task_complete_time" jdbcType="TIMESTAMP" property="task_complete_time" />
    <result column="task_progress" jdbcType="INTEGER" property="task_progress" />
    <result column="task_urgent" jdbcType="INTEGER" property="task_urgent" />
    <result column="task_important" jdbcType="INTEGER" property="task_important" />
    <result column="task_content" jdbcType="VARCHAR" property="task_content" />
    <result column="task_status" jdbcType="INTEGER" property="task_status" />
    <result column="task_del_reasion" jdbcType="VARCHAR" property="task_del_reasion" />
    <result column="task_reback_reasion" jdbcType="VARCHAR" property="task_reback_reasion" />
    <result column="is_remark" jdbcType="TINYINT" property="is_remark" />
    <result column="is_forward" jdbcType="TINYINT" property="is_forward" />
    <result column="is_delay" jdbcType="INTEGER" property="is_delay" />
    <result column="is_cui" jdbcType="INTEGER" property="is_cui" />
    <result column="task_picpath" jdbcType="VARCHAR" property="task_picpath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    task_id, company_id, task_title, to_user, user_id, task_obj, task_start_time, task_end_time, 
    task_complete_time, task_progress, task_urgent, task_important, task_content, task_status, 
    task_del_reasion, task_reback_reasion, is_remark, is_forward, is_delay, is_cui, task_picpath
  </sql>
  <select id="selectByExample" parameterType="cn.zx.pojo.CompanyTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company_task
    where task_id = #{task_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company_task
    where task_id = #{task_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zx.pojo.CompanyTaskExample">
    delete from company_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zx.pojo.CompanyTask">
    insert into company_task (task_id, company_id, task_title, 
      to_user, user_id, task_obj, 
      task_start_time, task_end_time, task_complete_time, 
      task_progress, task_urgent, task_important, 
      task_content, task_status, task_del_reasion, 
      task_reback_reasion, is_remark, is_forward, 
      is_delay, is_cui, task_picpath
      )
    values (#{task_id,jdbcType=INTEGER}, #{company_id,jdbcType=INTEGER}, #{task_title,jdbcType=VARCHAR}, 
      #{to_user,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER}, #{task_obj,jdbcType=INTEGER}, 
      #{task_start_time,jdbcType=TIMESTAMP}, #{task_end_time,jdbcType=TIMESTAMP}, #{task_complete_time,jdbcType=TIMESTAMP}, 
      #{task_progress,jdbcType=INTEGER}, #{task_urgent,jdbcType=INTEGER}, #{task_important,jdbcType=INTEGER}, 
      #{task_content,jdbcType=VARCHAR}, #{task_status,jdbcType=INTEGER}, #{task_del_reasion,jdbcType=VARCHAR}, 
      #{task_reback_reasion,jdbcType=VARCHAR}, #{is_remark,jdbcType=TINYINT}, #{is_forward,jdbcType=TINYINT}, 
      #{is_delay,jdbcType=INTEGER}, #{is_cui,jdbcType=INTEGER}, #{task_picpath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.zx.pojo.CompanyTask">
    insert into company_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="task_id != null">
        task_id,
      </if>
      <if test="company_id != null">
        company_id,
      </if>
      <if test="task_title != null">
        task_title,
      </if>
      <if test="to_user != null">
        to_user,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="task_obj != null">
        task_obj,
      </if>
      <if test="task_start_time != null">
        task_start_time,
      </if>
      <if test="task_end_time != null">
        task_end_time,
      </if>
      <if test="task_complete_time != null">
        task_complete_time,
      </if>
      <if test="task_progress != null">
        task_progress,
      </if>
      <if test="task_urgent != null">
        task_urgent,
      </if>
      <if test="task_important != null">
        task_important,
      </if>
      <if test="task_content != null">
        task_content,
      </if>
      <if test="task_status != null">
        task_status,
      </if>
      <if test="task_del_reasion != null">
        task_del_reasion,
      </if>
      <if test="task_reback_reasion != null">
        task_reback_reasion,
      </if>
      <if test="is_remark != null">
        is_remark,
      </if>
      <if test="is_forward != null">
        is_forward,
      </if>
      <if test="is_delay != null">
        is_delay,
      </if>
      <if test="is_cui != null">
        is_cui,
      </if>
      <if test="task_picpath != null">
        task_picpath,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="task_id != null">
        #{task_id,jdbcType=INTEGER},
      </if>
      <if test="company_id != null">
        #{company_id,jdbcType=INTEGER},
      </if>
      <if test="task_title != null">
        #{task_title,jdbcType=VARCHAR},
      </if>
      <if test="to_user != null">
        #{to_user,jdbcType=INTEGER},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="task_obj != null">
        #{task_obj,jdbcType=INTEGER},
      </if>
      <if test="task_start_time != null">
        #{task_start_time,jdbcType=TIMESTAMP},
      </if>
      <if test="task_end_time != null">
        #{task_end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="task_complete_time != null">
        #{task_complete_time,jdbcType=TIMESTAMP},
      </if>
      <if test="task_progress != null">
        #{task_progress,jdbcType=INTEGER},
      </if>
      <if test="task_urgent != null">
        #{task_urgent,jdbcType=INTEGER},
      </if>
      <if test="task_important != null">
        #{task_important,jdbcType=INTEGER},
      </if>
      <if test="task_content != null">
        #{task_content,jdbcType=VARCHAR},
      </if>
      <if test="task_status != null">
        #{task_status,jdbcType=INTEGER},
      </if>
      <if test="task_del_reasion != null">
        #{task_del_reasion,jdbcType=VARCHAR},
      </if>
      <if test="task_reback_reasion != null">
        #{task_reback_reasion,jdbcType=VARCHAR},
      </if>
      <if test="is_remark != null">
        #{is_remark,jdbcType=TINYINT},
      </if>
      <if test="is_forward != null">
        #{is_forward,jdbcType=TINYINT},
      </if>
      <if test="is_delay != null">
        #{is_delay,jdbcType=INTEGER},
      </if>
      <if test="is_cui != null">
        #{is_cui,jdbcType=INTEGER},
      </if>
      <if test="task_picpath != null">
        #{task_picpath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zx.pojo.CompanyTaskExample" resultType="java.lang.Long">
    select count(*) from company_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update company_task
    <set>
      <if test="record.task_id != null">
        task_id = #{record.task_id,jdbcType=INTEGER},
      </if>
      <if test="record.company_id != null">
        company_id = #{record.company_id,jdbcType=INTEGER},
      </if>
      <if test="record.task_title != null">
        task_title = #{record.task_title,jdbcType=VARCHAR},
      </if>
      <if test="record.to_user != null">
        to_user = #{record.to_user,jdbcType=INTEGER},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=INTEGER},
      </if>
      <if test="record.task_obj != null">
        task_obj = #{record.task_obj,jdbcType=INTEGER},
      </if>
      <if test="record.task_start_time != null">
        task_start_time = #{record.task_start_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.task_end_time != null">
        task_end_time = #{record.task_end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.task_complete_time != null">
        task_complete_time = #{record.task_complete_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.task_progress != null">
        task_progress = #{record.task_progress,jdbcType=INTEGER},
      </if>
      <if test="record.task_urgent != null">
        task_urgent = #{record.task_urgent,jdbcType=INTEGER},
      </if>
      <if test="record.task_important != null">
        task_important = #{record.task_important,jdbcType=INTEGER},
      </if>
      <if test="record.task_content != null">
        task_content = #{record.task_content,jdbcType=VARCHAR},
      </if>
      <if test="record.task_status != null">
        task_status = #{record.task_status,jdbcType=INTEGER},
      </if>
      <if test="record.task_del_reasion != null">
        task_del_reasion = #{record.task_del_reasion,jdbcType=VARCHAR},
      </if>
      <if test="record.task_reback_reasion != null">
        task_reback_reasion = #{record.task_reback_reasion,jdbcType=VARCHAR},
      </if>
      <if test="record.is_remark != null">
        is_remark = #{record.is_remark,jdbcType=TINYINT},
      </if>
      <if test="record.is_forward != null">
        is_forward = #{record.is_forward,jdbcType=TINYINT},
      </if>
      <if test="record.is_delay != null">
        is_delay = #{record.is_delay,jdbcType=INTEGER},
      </if>
      <if test="record.is_cui != null">
        is_cui = #{record.is_cui,jdbcType=INTEGER},
      </if>
      <if test="record.task_picpath != null">
        task_picpath = #{record.task_picpath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update company_task
    set task_id = #{record.task_id,jdbcType=INTEGER},
      company_id = #{record.company_id,jdbcType=INTEGER},
      task_title = #{record.task_title,jdbcType=VARCHAR},
      to_user = #{record.to_user,jdbcType=INTEGER},
      user_id = #{record.user_id,jdbcType=INTEGER},
      task_obj = #{record.task_obj,jdbcType=INTEGER},
      task_start_time = #{record.task_start_time,jdbcType=TIMESTAMP},
      task_end_time = #{record.task_end_time,jdbcType=TIMESTAMP},
      task_complete_time = #{record.task_complete_time,jdbcType=TIMESTAMP},
      task_progress = #{record.task_progress,jdbcType=INTEGER},
      task_urgent = #{record.task_urgent,jdbcType=INTEGER},
      task_important = #{record.task_important,jdbcType=INTEGER},
      task_content = #{record.task_content,jdbcType=VARCHAR},
      task_status = #{record.task_status,jdbcType=INTEGER},
      task_del_reasion = #{record.task_del_reasion,jdbcType=VARCHAR},
      task_reback_reasion = #{record.task_reback_reasion,jdbcType=VARCHAR},
      is_remark = #{record.is_remark,jdbcType=TINYINT},
      is_forward = #{record.is_forward,jdbcType=TINYINT},
      is_delay = #{record.is_delay,jdbcType=INTEGER},
      is_cui = #{record.is_cui,jdbcType=INTEGER},
      task_picpath = #{record.task_picpath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zx.pojo.CompanyTask">
    update company_task
    <set>
      <if test="company_id != null">
        company_id = #{company_id,jdbcType=INTEGER},
      </if>
      <if test="task_title != null">
        task_title = #{task_title,jdbcType=VARCHAR},
      </if>
      <if test="to_user != null">
        to_user = #{to_user,jdbcType=INTEGER},
      </if>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="task_obj != null">
        task_obj = #{task_obj,jdbcType=INTEGER},
      </if>
      <if test="task_start_time != null">
        task_start_time = #{task_start_time,jdbcType=TIMESTAMP},
      </if>
      <if test="task_end_time != null">
        task_end_time = #{task_end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="task_complete_time != null">
        task_complete_time = #{task_complete_time,jdbcType=TIMESTAMP},
      </if>
      <if test="task_progress != null">
        task_progress = #{task_progress,jdbcType=INTEGER},
      </if>
      <if test="task_urgent != null">
        task_urgent = #{task_urgent,jdbcType=INTEGER},
      </if>
      <if test="task_important != null">
        task_important = #{task_important,jdbcType=INTEGER},
      </if>
      <if test="task_content != null">
        task_content = #{task_content,jdbcType=VARCHAR},
      </if>
      <if test="task_status != null">
        task_status = #{task_status,jdbcType=INTEGER},
      </if>
      <if test="task_del_reasion != null">
        task_del_reasion = #{task_del_reasion,jdbcType=VARCHAR},
      </if>
      <if test="task_reback_reasion != null">
        task_reback_reasion = #{task_reback_reasion,jdbcType=VARCHAR},
      </if>
      <if test="is_remark != null">
        is_remark = #{is_remark,jdbcType=TINYINT},
      </if>
      <if test="is_forward != null">
        is_forward = #{is_forward,jdbcType=TINYINT},
      </if>
      <if test="is_delay != null">
        is_delay = #{is_delay,jdbcType=INTEGER},
      </if>
      <if test="is_cui != null">
        is_cui = #{is_cui,jdbcType=INTEGER},
      </if>
      <if test="task_picpath != null">
        task_picpath = #{task_picpath,jdbcType=VARCHAR},
      </if>
    </set>
    where task_id = #{task_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zx.pojo.CompanyTask">
    update company_task
    set company_id = #{company_id,jdbcType=INTEGER},
      task_title = #{task_title,jdbcType=VARCHAR},
      to_user = #{to_user,jdbcType=INTEGER},
      user_id = #{user_id,jdbcType=INTEGER},
      task_obj = #{task_obj,jdbcType=INTEGER},
      task_start_time = #{task_start_time,jdbcType=TIMESTAMP},
      task_end_time = #{task_end_time,jdbcType=TIMESTAMP},
      task_complete_time = #{task_complete_time,jdbcType=TIMESTAMP},
      task_progress = #{task_progress,jdbcType=INTEGER},
      task_urgent = #{task_urgent,jdbcType=INTEGER},
      task_important = #{task_important,jdbcType=INTEGER},
      task_content = #{task_content,jdbcType=VARCHAR},
      task_status = #{task_status,jdbcType=INTEGER},
      task_del_reasion = #{task_del_reasion,jdbcType=VARCHAR},
      task_reback_reasion = #{task_reback_reasion,jdbcType=VARCHAR},
      is_remark = #{is_remark,jdbcType=TINYINT},
      is_forward = #{is_forward,jdbcType=TINYINT},
      is_delay = #{is_delay,jdbcType=INTEGER},
      is_cui = #{is_cui,jdbcType=INTEGER},
      task_picpath = #{task_picpath,jdbcType=VARCHAR}
    where task_id = #{task_id,jdbcType=INTEGER}
  </update>
</mapper>