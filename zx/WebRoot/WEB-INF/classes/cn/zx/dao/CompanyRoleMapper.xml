<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zx.dao.CompanyRoleMapper">
  <resultMap id="BaseResultMap" type="cn.zx.pojo.CompanyRole">
    <id column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="c_r_userid" jdbcType="VARCHAR" property="c_r_userid" />
    <result column="c_r_password" jdbcType="VARCHAR" property="c_r_password" />
    <result column="title" jdbcType="CHAR" property="title" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="rules" jdbcType="VARCHAR" property="rules" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, c_r_userid, c_r_password, title, status, rules
  </sql>
  <select id="selectByExample" parameterType="cn.zx.pojo.CompanyRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company_role
    where user_id = #{user_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company_role
    where user_id = #{user_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zx.pojo.CompanyRoleExample">
    delete from company_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zx.pojo.CompanyRole">
    insert into company_role (user_id, c_r_userid, c_r_password, 
      title, status, rules)
    values (#{user_id,jdbcType=INTEGER}, #{c_r_userid,jdbcType=VARCHAR}, #{c_r_password,jdbcType=VARCHAR}, 
      #{title,jdbcType=CHAR}, #{status,jdbcType=INTEGER}, #{rules,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.zx.pojo.CompanyRole">
    insert into company_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        user_id,
      </if>
      <if test="c_r_userid != null">
        c_r_userid,
      </if>
      <if test="c_r_password != null">
        c_r_password,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="rules != null">
        rules,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="c_r_userid != null">
        #{c_r_userid,jdbcType=VARCHAR},
      </if>
      <if test="c_r_password != null">
        #{c_r_password,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="rules != null">
        #{rules,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zx.pojo.CompanyRoleExample" resultType="java.lang.Long">
    select count(*) from company_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update company_role
    <set>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=INTEGER},
      </if>
      <if test="record.c_r_userid != null">
        c_r_userid = #{record.c_r_userid,jdbcType=VARCHAR},
      </if>
      <if test="record.c_r_password != null">
        c_r_password = #{record.c_r_password,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.rules != null">
        rules = #{record.rules,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update company_role
    set user_id = #{record.user_id,jdbcType=INTEGER},
      c_r_userid = #{record.c_r_userid,jdbcType=VARCHAR},
      c_r_password = #{record.c_r_password,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=CHAR},
      status = #{record.status,jdbcType=INTEGER},
      rules = #{record.rules,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zx.pojo.CompanyRole">
    update company_role
    <set>
      <if test="c_r_userid != null">
        c_r_userid = #{c_r_userid,jdbcType=VARCHAR},
      </if>
      <if test="c_r_password != null">
        c_r_password = #{c_r_password,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="rules != null">
        rules = #{rules,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zx.pojo.CompanyRole">
    update company_role
    set c_r_userid = #{c_r_userid,jdbcType=VARCHAR},
      c_r_password = #{c_r_password,jdbcType=VARCHAR},
      title = #{title,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER},
      rules = #{rules,jdbcType=VARCHAR}
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
</mapper>